# exclude words that were already known in Italian before the experiment
setwd(wd4)
currentFile4 <- as.data.frame(read.delim(infile4, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
for (j in 1:nrow(currentFile4)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile4$Item[j])))
if (currentFile4$Known[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,7]<-1
behav[pos,9]<- 0} else{
behav[pos,7]<-0}
}
data_list2[[i]] <- currentFile2
for (l in 1:nrow(currentFile2)) {
if (currentFile2$Error[l] == 1 || is.na(currentFile2$Error[l])) {
currentFile2$ReadIn[l] <- 0
behav[l,8]<-0
} else {
currentFile2$ReadIn[l] <- 1
behav[l,8]<-1
}
}
for (l in 1:nrow(behav)) {
if (is.na(behav[l,6]) == T) {
behav[l,6] <- 0
}
}
# calculate a mdedian per person based on RTs
currentFile2$MedianGroup_1 <- NA
currentFile2$MedianGroup_2 <- NA
currentFile2$MedianGroup_av <- NA
for (i in 1:70){
currentFile2$RTsSplitav[i] <- mean(c(currentFile2$RTsSplit[i], currentFile2$RTsSplit[i+70]))
currentFile2$RTsSplitav[i+70] <- mean(c(currentFile2$RTsSplit[i], currentFile2$RTsSplit[i+70]))
}
med1 = median(currentFile2[currentFile2$Trial_nr<71 & currentFile2$Condition==1,]$RTsSplit, na.rm = T)
med2 = median(currentFile2[currentFile2$Trial_nr>70 & currentFile2$Condition==1,]$RTsSplit, na.rm = T)
med3 = median(currentFile2[currentFile2$Trial_nr<71 & currentFile2$Condition==1,]$RTsSplitav, na.rm = T)
for (l in 1:nrow(currentFile2[currentFile2$Trial_nr<71,])) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit > med1,]) > 35){
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] <= med1 ) {
currentFile2$MedianGroup_1[l] <- 1
currentFile2$MedianGroup_1[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] > med1) {
currentFile2$MedianGroup_1[l] <- 2
currentFile2$MedianGroup_1[l+70] <- 2
}
}
else {
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] < med1 ) {
currentFile2$MedianGroup_1[l] <- 1
currentFile2$MedianGroup_1[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] >= med1) {
currentFile2$MedianGroup_1[l] <- 2
currentFile2$MedianGroup_1[l+70] <- 2
}}
}
for (l in 71:140) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr>70,]$RTsSplit) == 0 & currentFile2[currentFile2$Trial_nr>70,]$RTsSplit > med2,]) > 35){
if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] <= med2 ) {
currentFile2$MedianGroup_2[l] <- 1
currentFile2$MedianGroup_2[l-70] <- 1
} else if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] > med2) {
currentFile2$MedianGroup_2[l] <- 2
currentFile2$MedianGroup_2[l-70] <- 2
}
}
else {
if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] < med2 ) {
currentFile2$MedianGroup_2[l] <- 1
currentFile2$MedianGroup_2[l-70] <- 1
} else if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] >= med2) {
currentFile2$MedianGroup_2[l] <- 2
currentFile2$MedianGroup_2[l-70] <- 2
}}
}
for (l in 1:nrow(currentFile2[currentFile2$Trial_nr<71,])) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav > med3,]) > 35){
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] <= med3 ) {
currentFile2$MedianGroup_av[l] <- 1
currentFile2$MedianGroup_av[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] > med3) {
currentFile2$MedianGroup_av[l] <- 2
currentFile2$MedianGroup_av[l+70] <- 2
}
}
else {
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] < med3 ) {
currentFile2$MedianGroup_av[l] <- 1
currentFile2$MedianGroup_av[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] >= med3) {
currentFile2$MedianGroup_av[l] <- 2
currentFile2$MedianGroup_av[l+70] <- 2
}}
}
# safe the new Final test file for the NewMarker.m script
setwd(wd1)
outfile = paste(pNumber,"Finaltest_new.txt",sep="_")
write.table(currentFile2, outfile, quote = F, row.names = F, col.names = T, sep = "\t")
# safe the file with the relevant behavioral information as text (for preprocessing script)
# columns as follows: TrialNr, Condition, VoiceOnset, TypeError, Not learned in Spanish, unknown in English, known in Italian, Read in
setwd(wd1)
outfile2 = paste(pNumber,"BehavMatrixFinalTest.txt",sep="_")
write.table(behav, outfile2, quote = F, row.names = F, col.names = F, sep = "\t")
#print("###")
#print(pNumber)
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_1) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_1==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_1) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_1==2,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_2) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr>70 & currentFile2$MedianGroup_2==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_2) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr>70 & currentFile2$MedianGroup_2==2,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_av) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_av==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_av) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_av==2,]))
#print("###")
}
pre <- rbindlist(data_list)
post <- rbindlist(data_list2)
post$Subject_nr <- as.factor(post$Subject_nr)
post$Condition <- as.factor(post$Condition)
post$Block <- as.factor(post$Block)
# leaving out RTs under 2000ms
post[post$RT_new < 2000,]$RT_new <- NA
# log-transforming the NEW and OLD RTs
post$RTlog <- log(post$VoiceOnset-2000)
post$RT_new_log <- log(post$RT_new-2000)
post$Item <- as.factor(post$Item)
# calculating ratio
post$Total <- post$PhonCorr+post$PhonIncorr
post$Ratio <- (post$PhonCorr/post$Total)*100
setwd("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/")
lenwords <- read.delim("WordsLengths.txt")
post$OrigLen <- NA
for (j in 1:nrow(post)) {
pos <- which(tolower(as.character(lenwords$English)) == tolower(as.character(post$Item[j])))
post$OrigLen[j] <- lenwords[pos,3] #}
print(j)
rm(pos)
}
post$CorrPer <- round(post$PhonCorrect/post$Total,2)
post$Corr <- round(post$CorrPer*post$OrigLen,0)
#post$Corr <- round(post$CorrPer*post$PhonCorrect,0)
post$Incorr <- post$OrigLen-post$Corr
post$Ratio <- (post$Corr/post$OrigLen)*100
# setting contrasts to the mean of each condition
contrasts(post$Condition) <- c(0.5,-0.5)
contrasts(post$Block) <- c(-0.5,0.5)
# turning my factors into numerical factors reflecting a dummy coding
post$ConditionN <- (-(as.numeric(post$Condition)-2))-0.5
post$BlockN <- (as.numeric(post$Block)-1)-0.5
modelfull <- glmer(cbind(Incorr, Corr) ~ ConditionN*BlockN + (1|Item) + (1+ConditionN|Subject_nr), family = "binomial", control=glmerControl(optimizer="bobyqa", optCtrl = list(maxfun = 100000)), data = post)
summary(modelfull)
require(reshape)
require(data.table)
require(plyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(lmtest)
A = c(301:329)
data_list <- list()
data_list2 <- list()
for (i in 1:length(A)){
pNumber = A[i]
wd1 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_FinalTest", sep="")
wd2 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day2/",pNumber,"_Posttest_Day2", sep="")
wd3 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_Familiarization", sep="")
wd4 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day1/", sep="")
infile1 <- paste(pNumber,"Posttest_Day2.txt",sep="_")
infile2 <- paste(pNumber,"Finaltest.txt",sep="_")
infile3 <- paste(pNumber, "IntFamiliarization.txt", sep="_")
infile4 <- paste(pNumber, "Familiarization_Day1.txt", sep="_")
behav <- matrix(NA,140,9)
setwd(wd2)
currentFile <- as.data.frame(read.delim(infile1, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
#as.numeric(gsub(",",".", currentFile$RT_new))
if (length(currentFile[currentFile$Error == 999,]$Error) > 0){
currentFile[currentFile$Error == 999,]$Error<-1
}
data_list[[i]] <- currentFile
setwd(wd1)
currentFile2 <- as.data.frame(read.delim(infile2, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
# inititate a column for the median split by RTs later
currentFile2$RTsSplit <- currentFile2$RT_new
## marking unlearned words as missing values in posttest ##
for (j in 1:nrow(currentFile)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile$Item[j])))
behav[pos,1] <- currentFile2$Trial_nr[pos]
behav[pos,2]<- currentFile2$Condition[pos]
behav[pos,3]<- currentFile2$VoiceOnset[pos]
behav[pos,4]<- currentFile2$TypeError[pos]
if (currentFile$Error[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,5]<- 1
behav[pos,9]<- 0} else {
behav[pos,5]<- 0
behav[pos,9]<- 1
}
}
if (length(currentFile2[ifelse(is.na(currentFile2$Error),
1,currentFile2$Error) == 999,]$Error) > 0) {
currentFile2[ifelse(is.na(currentFile2$Error),
1,currentFile2$Error) == 999,]$Error<-1
}
if (length(currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$VoiceOnset) > 0) {
currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$VoiceOnset <- NA # this excludes words that were produced with errors after interference from RT analysis
}
if (length(currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$RT_new) > 0) {
currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$RT_new <- NA # this excludes words that were produced with errors after interference from RT analysis
}
if (length(currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$RTsSplit) > 0) {
currentFile2[ifelse(is.na(currentFile2$Error),
0,currentFile2$Error) == 1,]$RTsSplit <- 100000 # this marks words that were produced with errors after interference from RT analysis
}
## exlcude items that were unknown in English
setwd(wd3)
currentFile3 <- as.data.frame(read.delim(infile3, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
for (j in 1:nrow(currentFile3)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile3$Item[j])))
if (currentFile3$Error[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,6]<-1
behav[pos,9]<- 0} else{
behav[pos,6]<-0}
}
# exclude words that were already known in Italian before the experiment
setwd(wd4)
currentFile4 <- as.data.frame(read.delim(infile4, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
for (j in 1:nrow(currentFile4)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile4$Item[j])))
if (currentFile4$Known[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,7]<-1
behav[pos,9]<- 0} else{
behav[pos,7]<-0}
}
data_list2[[i]] <- currentFile2
for (l in 1:nrow(currentFile2)) {
if (currentFile2$Error[l] == 1 || is.na(currentFile2$Error[l])) {
currentFile2$ReadIn[l] <- 0
behav[l,8]<-0
} else {
currentFile2$ReadIn[l] <- 1
behav[l,8]<-1
}
}
for (l in 1:nrow(behav)) {
if (is.na(behav[l,6]) == T) {
behav[l,6] <- 0
}
}
# calculate a mdedian per person based on RTs
currentFile2$MedianGroup_1 <- NA
currentFile2$MedianGroup_2 <- NA
currentFile2$MedianGroup_av <- NA
for (i in 1:70){
currentFile2$RTsSplitav[i] <- mean(c(currentFile2$RTsSplit[i], currentFile2$RTsSplit[i+70]))
currentFile2$RTsSplitav[i+70] <- mean(c(currentFile2$RTsSplit[i], currentFile2$RTsSplit[i+70]))
}
med1 = median(currentFile2[currentFile2$Trial_nr<71 & currentFile2$Condition==1,]$RTsSplit, na.rm = T)
med2 = median(currentFile2[currentFile2$Trial_nr>70 & currentFile2$Condition==1,]$RTsSplit, na.rm = T)
med3 = median(currentFile2[currentFile2$Trial_nr<71 & currentFile2$Condition==1,]$RTsSplitav, na.rm = T)
for (l in 1:nrow(currentFile2[currentFile2$Trial_nr<71,])) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit > med1,]) > 35){
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] <= med1 ) {
currentFile2$MedianGroup_1[l] <- 1
currentFile2$MedianGroup_1[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] > med1) {
currentFile2$MedianGroup_1[l] <- 2
currentFile2$MedianGroup_1[l+70] <- 2
}
}
else {
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] < med1 ) {
currentFile2$MedianGroup_1[l] <- 1
currentFile2$MedianGroup_1[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplit[l] >= med1) {
currentFile2$MedianGroup_1[l] <- 2
currentFile2$MedianGroup_1[l+70] <- 2
}}
}
for (l in 71:140) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr>70,]$RTsSplit) == 0 & currentFile2[currentFile2$Trial_nr>70,]$RTsSplit > med2,]) > 35){
if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] <= med2 ) {
currentFile2$MedianGroup_2[l] <- 1
currentFile2$MedianGroup_2[l-70] <- 1
} else if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] > med2) {
currentFile2$MedianGroup_2[l] <- 2
currentFile2$MedianGroup_2[l-70] <- 2
}
}
else {
if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] < med2 ) {
currentFile2$MedianGroup_2[l] <- 1
currentFile2$MedianGroup_2[l-70] <- 1
} else if (is.na(currentFile2$RTsSplit[l]) == 0 & currentFile2$RTsSplit[l] >= med2) {
currentFile2$MedianGroup_2[l] <- 2
currentFile2$MedianGroup_2[l-70] <- 2
}}
}
for (l in 1:nrow(currentFile2[currentFile2$Trial_nr<71,])) {
if (nrow(currentFile2[is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav > med3,]) > 35){
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] <= med3 ) {
currentFile2$MedianGroup_av[l] <- 1
currentFile2$MedianGroup_av[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] > med3) {
currentFile2$MedianGroup_av[l] <- 2
currentFile2$MedianGroup_av[l+70] <- 2
}
}
else {
if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] < med3 ) {
currentFile2$MedianGroup_av[l] <- 1
currentFile2$MedianGroup_av[l+70] <- 1
} else if (is.na(currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l]) == 0 & currentFile2[currentFile2$Trial_nr<71,]$RTsSplitav[l] >= med3) {
currentFile2$MedianGroup_av[l] <- 2
currentFile2$MedianGroup_av[l+70] <- 2
}}
}
# safe the new Final test file for the NewMarker.m script
setwd(wd1)
outfile = paste(pNumber,"Finaltest_new.txt",sep="_")
write.table(currentFile2, outfile, quote = F, row.names = F, col.names = T, sep = "\t")
# safe the file with the relevant behavioral information as text (for preprocessing script)
# columns as follows: TrialNr, Condition, VoiceOnset, TypeError, Not learned in Spanish, unknown in English, known in Italian, Read in
setwd(wd1)
outfile2 = paste(pNumber,"BehavMatrixFinalTest.txt",sep="_")
write.table(behav, outfile2, quote = F, row.names = F, col.names = F, sep = "\t")
#print("###")
#print(pNumber)
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_1) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_1==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_1) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_1==2,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_2) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr>70 & currentFile2$MedianGroup_2==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_2) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr>70 & currentFile2$MedianGroup_2==2,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_av) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_av==1,]))
#print(nrow(currentFile2[is.na(currentFile2$MedianGroup_av) == 0 & currentFile2$Condition ==1 & currentFile2$Trial_nr<71 & currentFile2$MedianGroup_av==2,]))
#print("###")
}
pNumber
pNumber = A[i]
wd1 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_FinalTest", sep="")
wd2 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day2/",pNumber,"_Posttest_Day2", sep="")
wd3 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_Familiarization", sep="")
wd4 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day1/", sep="")
infile1 <- paste(pNumber,"Posttest_Day2.txt",sep="_")
infile2 <- paste(pNumber,"Finaltest.txt",sep="_")
infile3 <- paste(pNumber, "IntFamiliarization.txt", sep="_")
infile4 <- paste(pNumber, "Familiarization_Day1.txt", sep="_")
behav <- matrix(NA,140,9)
setwd(wd2)
currentFile <- as.data.frame(read.delim(infile1, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
#as.numeric(gsub(",",".", currentFile$RT_new))
if (length(currentFile[currentFile$Error == 999,]$Error) > 0){
currentFile[currentFile$Error == 999,]$Error<-1
}
data_list[[i]] <- currentFile
setwd(wd1)
currentFile2 <- as.data.frame(read.delim(infile2, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
currentFile2$RTsSplit <- currentFile2$RT_new
## marking unlearned words as missing values in posttest ##
for (j in 1:nrow(currentFile)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile$Item[j])))
behav[pos,1] <- currentFile2$Trial_nr[pos]
behav[pos,2]<- currentFile2$Condition[pos]
behav[pos,3]<- currentFile2$VoiceOnset[pos]
behav[pos,4]<- currentFile2$TypeError[pos]
if (currentFile$Error[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,5]<- 1
behav[pos,9]<- 0} else {
behav[pos,5]<- 0
behav[pos,9]<- 1
}
}
View(currentFile)
View(currentFile2)
pos
i = 10
pNumber = A[i]
wd1 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_FinalTest", sep="")
wd2 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day2/",pNumber,"_Posttest_Day2", sep="")
wd3 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_Familiarization", sep="")
wd4 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day1/", sep="")
infile1 <- paste(pNumber,"Posttest_Day2.txt",sep="_")
infile2 <- paste(pNumber,"Finaltest.txt",sep="_")
infile3 <- paste(pNumber, "IntFamiliarization.txt", sep="_")
infile4 <- paste(pNumber, "Familiarization_Day1.txt", sep="_")
behav <- matrix(NA,140,9)
setwd(wd2)
currentFile <- as.data.frame(read.delim(infile1, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
#as.numeric(gsub(",",".", currentFile$RT_new))
if (length(currentFile[currentFile$Error == 999,]$Error) > 0){
currentFile[currentFile$Error == 999,]$Error<-1
}
data_list[[i]] <- currentFile
setwd(wd1)
currentFile2 <- as.data.frame(read.delim(infile2, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
# inititate a column for the median split by RTs later
currentFile2$RTsSplit <- currentFile2$RT_new
j = 1
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile$Item[j])))
pos
behav[pos,1] <- currentFile2$Trial_nr[pos]
behav[pos,2]<- currentFile2$Condition[pos]
behav[pos,3]<- currentFile2$VoiceOnset[pos]
behav[pos,1]
currentFile2$Trial_nr[pos]
i = 9
pNumber = A[i]
wd1 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_FinalTest", sep="")
wd2 <-  paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day2/",pNumber,"_Posttest_Day2", sep="")
wd3 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day3/",pNumber,"_Familiarization", sep="")
wd4 <- paste("//cnas.ru.nl/wrkgrp/STD-Back-Up-Exp2-EEG/", pNumber,"/Day1/", sep="")
infile1 <- paste(pNumber,"Posttest_Day2.txt",sep="_")
infile2 <- paste(pNumber,"Finaltest.txt",sep="_")
infile3 <- paste(pNumber, "IntFamiliarization.txt", sep="_")
infile4 <- paste(pNumber, "Familiarization_Day1.txt", sep="_")
behav <- matrix(NA,140,9)
setwd(wd2)
currentFile <- as.data.frame(read.delim(infile1, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
#as.numeric(gsub(",",".", currentFile$RT_new))
if (length(currentFile[currentFile$Error == 999,]$Error) > 0){
currentFile[currentFile$Error == 999,]$Error<-1
}
data_list[[i]] <- currentFile
setwd(wd1)
currentFile2 <- as.data.frame(read.delim(infile2, stringsAsFactors=FALSE, sep = "\t", header = T, skipNul = TRUE))
# inititate a column for the median split by RTs later
currentFile2$RTsSplit <- currentFile2$RT_new
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile$Item[j])))
behav[pos,1] <- currentFile2$Trial_nr[pos]
behav[pos,2]<- currentFile2$Condition[pos]
behav[pos,3]<- currentFile2$VoiceOnset[pos]
behav[pos,4]<- currentFile2$TypeError[pos]
currentFile$Error[j]
View(currentFile)
j = 1
currentFile$Error[j] == 1
if (currentFile$Error[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,5]<- 1
behav[pos,9]<- 0} else {
behav[pos,5]<- 0
behav[pos,9]<- 1
}
for (j in 1:nrow(currentFile)) {
pos <- which(tolower(as.character(currentFile2$Item )) == tolower(as.character(currentFile$Item[j])))
behav[pos,1] <- currentFile2$Trial_nr[pos]
behav[pos,2]<- currentFile2$Condition[pos]
behav[pos,3]<- currentFile2$VoiceOnset[pos]
behav[pos,4]<- currentFile2$TypeError[pos]
if (currentFile$Error[j] == 1) {
currentFile2$Error[pos] <- NA
currentFile2$VoiceOnset[pos] <- NA
currentFile2$RT_new[pos] <- NA
currentFile2$PhonCorrect[pos]<- NA
currentFile2$PhonIncorrect[pos]<-NA
currentFile2$RTsSplit[pos] <- NA
behav[pos,5]<- 1
behav[pos,9]<- 0} else {
behav[pos,5]<- 0
behav[pos,9]<- 1
}
}
j
pos
currentFile2$Trial_nr[pos]
currentFile2$Condition[pos]
currentFile2$VoiceOnset[pos]
currentFile2$TypeError[pos]
behav[pos,1]
behav[pos,2]
behav[pos,3]
behav[pos,4]
currentFile2$VoiceOnset[pos]
currentFile$Error[j] == 1
currentFile2$Error[pos] <- NA
currentFile2$Error[pos]
currentFile2$VoiceOnset[pos]
currentFile2$RT_new[pos]
